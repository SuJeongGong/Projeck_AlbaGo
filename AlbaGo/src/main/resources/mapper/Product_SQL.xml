<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.ex.dao.ProductDAO">

	<!-- 관리자 상품입니다 -->
	<select id="selectList" resultType="Product"> <!-- 관리자에서 상품보기 -->
		SELECT * FROM product
		<where>
		delete_check =1
		</where>
	</select>

	<insert id="insertProduct_term" parameterType="product"> <!-- 관리자에서 기간있는 상품추가 -->
		INSERT INTO
		product
		VALUES
		(NULL,
		#{name},
		#{term},
		#{price},
		#{amount},
		#{explan},
		1
		)

	</insert>
	<insert id="insertProduct_no_term" parameterType="product"> <!-- 관리자에서 기간없는 상품추가 -->
		INSERT INTO
		product
		(product_id,
		name,
		price,
		explan,
		amount)
		VALUES
		(NULL,
		#{name},
		#{price},
		#{explan},
		#{amount},
		#{delete_check}
		)
	</insert>
	
	<select id="product_account" resultType="Product" parameterType ="int"><!-- 수정에서 수정상세보기 -->
		SELECT * FROM product 
		<where>
		product_id =#{product_id}
		and			
		delete_check =1
		</where>
	</select>
	
	
	<update id="update_product" parameterType="Product"> <!-- 상품 수정입니다! -->
	   UPDATE product 
	   SET name=#{name},term=#{term},price=#{price}, explan=#{explan},amount=#{amount}
	   <where>
		product_id =#{product_id}
		and			
		delete_check =1
		</where>
   
	</update>
	
	<delete id="delete_product" parameterType="Product" ><!-- 상풍 삭제입니다! -->
	update  product SET delete_check=0
	<where>
		product_id =#{product_id}
		and			
		delete_check =1
		</where>
	</delete>
	
	
	
	<!-- ############################################################# -->
	
	<!-- 기업입니다 -->
	<select id="enterprise_selectList" resultType="Product"><!-- 기업에서 상품보기 -->
		SELECT * FROM product
		<where>
		delete_check =1
		</where>
	</select>
	
	<select id="enterprise_selectWrite" resultType="Product" parameterType ="int"><!-- 기업에서 상세보기 -->
		SELECT * FROM product 
		<where>
		product_id =#{product_id}
		and			
		delete_check =1
		</where>
	</select>
	

	<insert id="insertProduct_payment" parameterType="Payment"> <!-- 기업에서 결제승인하기 -->

		INSERT INTO payment

		(payment_id,
		product_id,
		enterprise_id,
		date)
		VALUES

		(null,
		#{product_id},
		#{enterprise_id},
		null);
	</insert>
	<select id="selectPayments" resultType="Payment">
		select  payment.payment_id as payment_id, 
				enterprise.name as enterprise_name, 
				product.name as product_name,
				payment.result as result, 
				product.term as use_date,
				payment.date as date
		from Payment, enterprise, product 
		<where>
			payment.enterprise_id = enterprise.enterprise_id
			and payment.product_id = product.product_id
		</where>
	</select>
	

</mapper>