<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.ex.dao.AdminDAO">
<!-- 공수정 / 메인화면 -->

<!-- 아이템별 기업마다 결제한 횟수-->
<select id="selectCountItem_Enterprise" parameterType= "string" resultType= "hashmap">
	SELECT COUNT(*) AS count, payment.enterprise_id FROM payment,product 
	<where> product.product_id = payment.product_id
	AND  product.`type` = #{item}
	</where>
	group by payment.enterprise_id 
	order BY count DESC
	LIMIT 5
</select>
	<!-- 이예슬 -->
	<!-- 메인일주일매출액  -->
	<select id="selectWeekTotal" resultType="int">
		SELECT  SUM(price) AS sum_price 
		FROM product,payment

		<where>
		product.product_id =payment.product_id 
		AND product.delete_check=1
		AND payment.result="승인"
		AND payment.`date` > (NOW() - INTERVAL 7 DAY)
		</where>
	</select>
	<!-- 개인 -->
	<select id="selectRecentSales" resultType="HashMap">
		SELECT DATE_FORMAT(payment.DATE , "%Y/%m %d") as date, SUM(price) as
		price
		FROM product, payment
		<where>product.product_id
			= payment.product_id
			AND	<![CDATA[	 DATE_FORMAT(payment.DATE , "%Y%m%d") > date_add(now(),interval -7 DAY) ]]>

		</where>
		GROUP BY DATE_FORMAT(payment.DATE , "%Y/%m/%d")
	</select>

	<select id="selectItems" resultType="HashMap">
		SELECT COUNT(*) as count, product.type as type FROM payment,product
		<where> product.product_id = payment.product_id</where>
		group by product.type
	</select>
		<select id="today_Count" resultType="int">
		select count(*)
		from
		board_recruit
		where date >= CURDATE()
		and board_recruit.delete_check = 1
	</select>
		<select id="today_Count_resume" resultType="int">
		select count(*)
		from
		board_resume
		where date >= CURDATE()
		and board_resume.delete_check = 1
	</select>
	
	
	<!-- #################  -->
	<!-- 임승재  -->
	
	<!-- 총검색  -->
	<select id="searchIndi" resultType="hashmap" parameterType="String">
		SELECT individual_id as member_id,
		name as name,
		phone as phone
		FROM individual
		WHERE (individual_id LIKE CONCAT('%',#{search},'%')
		OR name LIKE CONCAT('%',#{search},'%'))
	</select>
	<select id="searchEnter" resultType="hashmap" parameterType="String">
		SELECT  enterprise_id as member_id,
		name as name,
		manager_phone as phone
		FROM enterprise
		WHERE (enterprise_id LIKE CONCAT('%',#{search},'%')
		OR `NAME` LIKE CONCAT('%',#{search},'%'))
	</select>
	
	<!-- 관리자 메인 오늘 회원가입한 총원 -->
 	<select id="select_TI_join" resultType="int">
		select COUNT(*) AS '개인'
		FROM individual
		WHERE DATE >= CURDATE()
	</select>
	<select id="selet_TE_join" resultType="int">
		select COUNT(*) AS '개인'
		FROM enterprise
		WHERE DATE >= CURDATE()	
	</select> 
	
	<!-- 오늘 매출액 -->
	<select id = "total_M" resultType="hashmap" >
		SELECT DATE_FORMAT(payment.DATE , "%Y/%m/%d") as date, SUM(price) as price
		FROM product, payment
		<![CDATA[
		where product.product_id= payment.product_id
		AND DATE_FORMAT(payment.DATE , "%Y%m%d") >= CURDATE()
		GROUP BY DATE_FORMAT(payment.DATE , "%Y/%m/%d")
		]]>
	</select>
	
	<!-- 예슬이가 아에 감싸는 거라고 설명해줌 -->
	<select id = "recruit_List_id" resultType="BoardRecruit" parameterType="String">
		SELECT 
		board_recruit.board_recruit_id AS board_recruit_id, 
		board_recruit.`date` AS date , 
		board_recruit.title AS title,
		 recruit.enterprise_id AS enterprise_id, 
		 recruit.place AS place, 
		 recruit.category AS category, 
		 recruit.gender AS gender, 
		 recruit.education AS education
		 
		 
		FROM board_recruit, recruit
		<where> board_recruit.recruit_id = recruit.recruit_id
		and board_recruit.delete_check = 1
		</where>
	</select>
	
	
	
	
	<!-- 매출 게시판-->
	<select id= "selectPaymentList"  parameterType="String" resultType="Payment">
	SELECT product.price as product_price,
	payment.enterprise_id as enterprise_id,
	payment.date as date,
	product.name as product_name
	
	 FROM payment, product where payment.product_id = product.product_id
	 ORDER BY date DESC
	</select>
	
	<!-- 전체 매출 -->
	<select id = "all_totalsales" resultType="int" >
	  SELECT  SUM(price) AS sum_price 
      FROM product,payment

      where
      product.product_id =payment.product_id 
      AND product.delete_check=1
      AND payment.result="승인"
	</select>
	
	<!-- 오늘 매출 -->
	<select id = "todaysales" resultType="int">
	  SELECT  IFNULL(SUM(price),0) AS sum_price 
      FROM product,payment

      where
      product.product_id =payment.product_id
	  AND `date` >= CURDATE()
      AND product.delete_check=1
      AND payment.result="승인"
	</select>
	
	<!-- 주간 매출 -->
	<select id = "weeklysales" resultType="int">
	SELECT IFNULL(SUM(price),0) AS sum_price 
      FROM product,payment

      where
      product.product_id =payment.product_id
	  AND `date` > (NOW() - INTERVAL 7 DAY)
      AND product.delete_check=1
      AND payment.result="승인"
	</select>
	
	<!-- 매출관리 전체 검색 -->
	<select id = "PaymentSearch" resultType="Payment" parameterType="hashmap">
		SELECT product.price as product_price,
		product.name as product_name,
		payment.enterprise_id as enterprise_id,
		payment.date as date
		FROM product,payment 
		<where> payment.product_id = product.product_id
		and product.type like CONCAT('%',#{product_type},'%')
		and (product.name like CONCAT('%',#{search},'%')
		OR payment.enterprise_id like CONCAT('%',#{search},'%'))
		and `date` BETWEEN #{start} AND #{end}
		</where>
		order by payment.date DESC
		LIMIT #{page},10

	</select>
	<select id = "PaymentSearchCount" resultType="int" parameterType="hashmap">
		SELECT count(*)
		FROM product,payment 
		<where> payment.product_id = product.product_id
		and product.type like CONCAT('%',#{product_type},'%')
		and (product.name like CONCAT('%',#{search},'%')
		OR payment.enterprise_id like CONCAT('%',#{search},'%'))
		and `date` BETWEEN #{start} AND #{end}
		</where>

	</select>
	
	
</mapper>